<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	default-lazy-init="false">

	<description>Quartz的本地Cron式执行任务配置</description>

	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="clearOrderRegMedicalcardCronTrigger" />
				<ref bean="clearRegInfoDetailCronTrigger" />
				<ref bean="clearFriedAndDeliveryCronTrigger" />
			</list>
		</property>
		<!-- Quartz配置 
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
			</props>
		</property>
		-->
		<!-- 启动时延期5秒开始任务 -->
		<property name="startupDelay" value="5" />
	</bean>

	<!-- Cron式Trigger定义 -->
	<bean id="clearOrderRegMedicalcardCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="clearOrderRegMedicalcardCronJobDetail" />
		<property name="cronExpression" value="*/5 * * * * ?" />
	</bean>
	
	<!--
		Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean
	-->
	<bean id="clearOrderRegMedicalcardCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="clearOrderRegMedicalcardTasker" />
		<property name="targetMethod" value="clearOrderRegMedicalcard" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="clearRegInfoDetailCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="clearRegInfoDetailCronJobDetail" />
		<property name="cronExpression" value="*/5 * * * * ?" />
	</bean>
	
	<bean id="clearRegInfoDetailCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="clearRegInfoDetailTasker" />
		<property name="targetMethod" value="clearRegInfoDetail" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="clearFriedAndDeliveryCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="clearFriedAndDeliveryCronJobDetail" />
		<property name="cronExpression" value="* * */1 * * ?" />
	</bean>
	
	<bean id="clearFriedAndDeliveryCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="clearFriedAndDeliveryTasker" />
		<property name="targetMethod" value="clearFriedAndDelivery" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="clearOrderRegMedicalcardTasker" class="com.yxw.interfaces.task.ClearOrderRegMedicalcardTasker" />
	<bean id="clearRegInfoDetailTasker" class="com.yxw.interfaces.task.ClearRegInfoDetailTasker" />
	<bean id="clearFriedAndDeliveryTasker" class="com.yxw.interfaces.task.ClearFriedAndDeliveryTasker" />
</beans>
